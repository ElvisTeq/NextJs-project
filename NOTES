## 1 Preparing the Project Pages

- Created
  => "index.js" (main page)
  => "./pages/new-meetup/index.js" (Create meetup page)
  => "./pages/[meetupId]/index.js" (Meetup details)

**\*** "index.js" automatically takes the folder name as URL **\***
Ex => "./pages/[meetupId]/index.js"
=> [meetupId] = index.js

///////////////////////////////////////////////////////////////////////////////////////////////

## 2 Outputting a List of Meetups

- "index.js"
  => Created [DUMMY_DATA]
  => Added <MeetupList.js /> component to JSX

///////////////////////////////////////////////////////////////////////////////////////////////

## 3 Adding the New Meetup Form

- "./pages/new-meetup"
  => Added <NewMeetupForm /> component to JSX
  => Created "addMeetupHandler" for <NewMeetupForm onAddMeetup={addMeetupHandler} />

///////////////////////////////////////////////////////////////////////////////////////////////

## 4 The "\_app.js" File & Layout Wrapper

- "\_app.js"
  => This is the root component (the top layer of the application)
  => Wrapping <Layout> component (will be added to all the application)

- "MainNavigation.js"
  => import Link from 'next/link'
  => For <Link href=''> to work

///////////////////////////////////////////////////////////////////////////////////////////////

## 5 Using Programmatic (Imperative) Navigation

- "MeetupItem.js"
  => { useRouter } ".push" to redirect user to MeetupDetail page
  => Created a showDetailHandler() for the JSW <onClick={showDetailHandler}>

------------------------------------------------- import { useRouter } from "next/router";
const router = useRouter()
router.push('Location') // To redirect user

///////////////////////////////////////////////////////////////////////////////////////////////

## 6 Adding Custom Components & CSS Modules

- Created
  => "MeetupDetails.js" Component
  => "MeetupDetails.module.css"

- "[meetupId]/index.js"
  => Added <MeetupDetail /> component

///////////////////////////////////////////////////////////////////////////////////////////////

## 7 Pre-Rendering in Next.Js / Data fetching for Static Pages

- "./pages/index.js"
  => Implemented "getStaticProps()" To get Data before Loading Page

------------------------------------------------- export const getStaticProps() => { return { **_anyName_**: data } }
(Only Works in Page Components) (Always returns { props: { **_anyName_**: Data } })
Function to get data before running the Component Page
<MeetupList meetups={props.anyName} />

///////////////////////////////////////////////////////////////////////////////////////////////

## 8 More Static Site Generation (SSG)

------------------------------------------------- npm run build
To see our application details (pages, components, etc)

------------------------------------------------- export const getStaticProps() => { return { **_anyName_**: data }, revalidatye: 10 }
{return { **_anyName_**: data }, revalidatye: 10 }
To => Revalidate/Replace the data if there's any changes every 10 secs
